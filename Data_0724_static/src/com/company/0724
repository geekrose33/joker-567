# static关键字
static关键字可以用来修饰成员变量和成员方法 被修饰的成员是属于“类” 而不是
单单属于某个对象 也就是说可以不依赖对象去调用

### 类变量
当‘static’ 修饰成员变量时 该变量就类变量 该类的每一个对象都共享同一个类变量
的值 任何对象都可以更改该类变量的值 但也可以在不创建对象的情况下对类变量进行操作

格式：
```
static 数据类型 变量名
```
应用 static修饰的变量具有记忆功能

### 静态方法
static关键字修饰成员方法 我们叫类方法 不属于某一个对象而是属于类的 习惯叫静态方法
```
修饰符 static 返回值类型 方法名（参数列表）{
}
```
- 静态方法 可以直接访问类变量和静态方法
- 静态方法 不能直接访问普通方法和普通成员变量 反之 成员方法可以直接访问类变量和静态方法
- 静态方法中不能使用this关键字
- 静态方法只能访问静态成员

#### 调用格式
被static修饰的成员建议通过类名直接访问
```
类名.类变量

类名.静态方法()
```

### 静态代码块
静态代码块 定义在成员位置 使用static修饰的代码块{}
- 位置 在类中方法外
- 执行 随着类的加载而执行 且执行一次 优先于main方法 和构造方法

- 总结 static关键字可以修饰变量 方法 代码块 使用它的目的是我们不想创建对象
的情况下去调用方法

# static的实际应用
### Arrays类
import java.util.Arrays;包含的所有方法均为静态方法 调用起来非常方便
- Arrays.toString() 返回数组内容的字符串表示形式
- Arrays。sort(arr) 对指定的int 类型数组进行升序排序

# Math类
Math类包含常用的数学运算方法  其包含的所有方法均为静态方法 调用起来非常简单
